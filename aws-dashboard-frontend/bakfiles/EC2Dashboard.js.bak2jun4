import React, { useEffect, useState } from 'react';
import axios from 'axios';

function EC2Dashboard({ region }) {
  const [instances, setInstances] = useState([]);
  const [selected, setSelected] = useState(null);

  useEffect(() => {
    axios.get(`http://65.0.7.159:5000/instances/${region}`)
      .then(res => {
        if (Array.isArray(res.data)) setInstances(res.data);
      });
  }, [region]);

  const handleResize = (id, type) => {
    const newType = prompt("Enter new instance type:", type);
    if (newType) {
      axios.post(`http://65.0.7.159:5000/instance/${region}/${id}/resize`, {
        instance_type: newType
      }).then(() => alert('Resize requested.'));
    }
  };

  const handleTerminate = id => {
    if (window.confirm("Are you sure to terminate this instance?")) {
      axios.post(`http://65.0.7.159:5000/instance/${region}/${id}/terminate`)
        .then(() => alert('Instance terminated.'));
    }
  };

  const handleStart = id => {
    axios.post(`http://65.0.7.159:5000/instance/${region}/${id}/start`)
      .then(() => alert('Instance start requested.'));
  };

  const handleStop = id => {
    axios.post(`http://65.0.7.159:5000/instance/${region}/${id}/stop`)
      .then(() => alert('Instance stop requested.'));
  };

  return (
    <div className="mt-4">
      <h2 className="text-xl font-bold mb-4">EC2 Instances</h2>

      <div className="mb-4">
        <label className="font-semibold mr-2">Region:</label>
        <select value={region} disabled className="border p-1 rounded bg-gray-100">
          <option>us-east-1</option>
          <option>us-west-2</option>
          <option>ap-south-1</option>
        </select>
      </div>

      <div className="grid grid-cols-2 gap-4">
        <div className="bg-white p-4 rounded shadow">
          <h3 className="font-semibold mb-2 text-lg">Instances</h3>
          <ul className="space-y-2">
            {instances.map(inst => (
              <li key={inst.id} className="border p-2 rounded cursor-pointer hover:bg-gray-100"
                  onClick={() => setSelected(inst)}>
                <p className="font-semibold text-blue-700">{inst.id}</p>
                <p className="text-sm text-gray-600">Name: {inst.name || 'N/A'}</p>
                <p className="text-xs inline-block bg-gray-200 rounded px-2 py-0.5 mt-1">{inst.type}</p>
              </li>
            ))}
          </ul>
        </div>

        {selected && (
          <div className="bg-white p-4 rounded shadow">
            <h3 className="font-semibold text-lg mb-2">Instance Details</h3>
            <p><b>ID:</b> {selected.id}</p>
            <p><b>Name:</b> {selected.name || 'N/A'}</p>
            <p><b>Type:</b> {selected.type}</p>
            <p><b>AZ:</b> {selected.az}</p>
            <p><b>Volumes:</b> {selected.volumes.join(', ')}</p>
            <p><b>Role:</b> {selected.role}</p>
            <p><b>Status:</b> {selected.status}</p>

            <div className="mt-4 flex flex-wrap gap-2">
              <button onClick={() => handleResize(selected.id, selected.type)} className="bg-yellow-500 text-white px-4 py-1 rounded">
                Resize
              </button>
              <button onClick={() => handleTerminate(selected.id)} className="bg-red-600 text-white px-4 py-1 rounded">
                Decommission
              </button>
              {selected.status === 'stopped' && (
                <button onClick={() => handleStart(selected.id)} className="bg-green-600 text-white px-4 py-1 rounded">
                  Start
                </button>
              )}
              {selected.status === 'running' && (
                <button onClick={() => handleStop(selected.id)} className="bg-blue-600 text-white px-4 py-1 rounded">
                  Stop
                </button>
              )}
            </div>
          </div>
        )}
      </div>
    </div>
  );
}

export default EC2Dashboard;
